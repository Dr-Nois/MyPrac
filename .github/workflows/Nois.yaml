name: GcmCICD
on:
  push:
    branches:
      - 'master'


jobs:
  trivy-scan-code:
    runs-on: ubuntu-latest
    name: Scan
    if: ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@master

        # One of my friends suggested me to use the txt instead of table to show the output.
      - name: Run Trivy vulnerability scanner in repo mode
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'
          exit-code: "1"
          severity: CRITICAL 
          # Leanred from "https://github.com/marketplace/actions/aqua-security-trivy" 


      - name: Scan failed send notification to slack
        if: ${{ failure() && steps.scan.conclusion == 'failure' }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ${{ secrets.MY_SECRET_CHANNEL }}
          SLACK_COLOR: ${{ job.status }} 
          SLACK_MESSAGE: 'Failed trivy scan,see uploaded report'
          SLACK_TITLE: Scan failed - Guo Chenming
          SLACK_USERNAME: DipSA_CICD
          SLACK_WEBHOOK: ${{ secrets.MY_SECRET_SC }}


      - name: slack send trivy scan reports
        if: ${{ failure() && steps.scan.conclusion == 'failure' }}
        uses: MeilCli/slack-upload-file@master
        with:
          slack_token: ${{ secrets.MY_SECRET_BT }}
          channel_id: ${{ secrets.MY_SECRET_CHANNEL }}
          file_path: 'trivy-report.txt'
          initial_comment: 'Scan report by Guo Chenming'


  build_and_push:
    runs-on: ubuntu-latest
    needs: trivy-scan-code
    if: success()
    permissions:
      contents: read
      packages: write
      id-token: write 
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master


      - name: Login to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.MY_SECRET_DU }} # This is my docker username.
          password: ${{ secrets.MY_SECRET_DT }} # This is my docker token.


      - name: Build and push
        uses: docker/build-push-action@master
        id: build-and-push
        with:
          push: true
          tags: 'nois0/go-fortune:${{ github.sha }}'
          

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.2.0' #v2.1.1


      - name: Sign image with a private key
        run: |
          echo "${{ secrets.MY_SECRET_NEWPRIK }}" | base64 --decode > cosign_key
          cosign sign --yes --key cosign_key nois0/go-fortune:${{ github.sha }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.MY_SECRET_NEWPRIK }}
          COSIGN_PASSWORD: ${{ secrets.MY_SECRET_CP }}


      - name: send success notification
        id: slack_success
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ${{ secrets.MY_SECRET_CHANNEL }}
          SLACK_COLOR: ${{ job.status }} 
          SLACK_MESSAGE: |
            Name: Guo Chenming
            Metriculation: qwq6666
            Email: e1221773@u.nus.edu
            Repository: https://github.com/${{ github.repository }}
            Docker Hub URL:  ${{ secrets.MY_SECRET_DU }}
          SLACK_TITLE: 'Image build and signed'
          SLACK_USERNAME: 'DipSA 57 CICD'
          SLACK_WEBHOOK: ${{ secrets.MY_SECRET_SC }}
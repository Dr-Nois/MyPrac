name: My_CICD
on:
  push:
    branches:
      - 'master'
    

    # this is my own practice to force to operate the fail flow
    # in fact by this way i can also achieve the fail flow but it is more complex

    # workflow_dispatch: # add the workflow_dispatch
    # inputs:
    #  force-failure-workflow:
    #    # to use the failure workflow
    #    required: true
    #    default: 'true'
    #    # set to true to force the failure workflow


jobs:
  trivy-scan-code:
    runs-on: ubuntu-latest
    name: Scan the code base for vulnerabilities
    if:  ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'
          exit-code: "1"
          severity: CRITICAL # need to be changed from critical to HIGH to test fail flow


      - name: Scan failed send notification to slack
        if: ${{ failure() && steps.scan.conclusion == 'failure' }} 
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ${{ secrets.MY_SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }} 
          SLACK_MESSAGE: 'Failed trivy scan,see uploaded report'
          SLACK_TITLE: Scan failed - Guo Chenming
          SLACK_USERNAME: DipSA_CICD
          SLACK_WEBHOOK: ${{ secrets.MY_SLACK_WEBHOOK_URL }}


      - name: slack send trivy scan reports
        if:  ${{ failure() && steps.scan.conclusion == 'failure'}}
        uses: MeilCli/slack-upload-file@master
        with:
          slack_token: ${{ secrets.MY_SLACK_TOKEN }}
          channel_id: ${{ secrets.MY_SLACK_CHANNEL_ID }}
          file_path: 'trivy-report.txt'
          initial_comment: 'Scan report by Guo Chenming'


  build_and_push:
    runs-on: ubuntu-latest
    needs: trivy-scan-code
    if: success()
    permissions:
      contents: read
      packages: write
      id-token: write 


    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.MY_DOCKERHUB_USER }}
          password: ${{ secrets.MY_DOCKERHUB_TOKEN }}


      - name: Build and push
        uses: docker/build-push-action@master
        id: build-and-push
        with:
          push: true
          tags: nois0/go-fortune:${{ github.sha }} 
          

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.2.0'
          # when i use the version 2.2.1 like the example, there is an error here

      - name: Sign image with a private key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY nois0/go-fortune:${{ github.sha }}
        env:
         
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}


      - name: send success notification
        id: slack_success
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ${{ secrets.MY_SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }} 
          SLACK_MESSAGE: |
            Name: Guo Chenming
            Metriculation: GGbone
            Email: e1221773@u.nus.edu
            Repository: https://github.com/${{ github.repository }}
            Docker Hub URL:  ${{ secrets.My_DOCKERHUB_URL }}
          SLACK_TITLE: 'Image build and signed'
          SLACK_USERNAME: 'DipSA 57 CICD'
          SLACK_WEBHOOK: ${{ secrets.MY_SLACK_WEBHOOK_URL }}


# this is my own practice to force to operate the fail flow
# a bit too complex so i change to another way
      #- name: Force run failed workflow
      #  if: failure() && steps.scan.conclusion == 'failure' && github.event.inputs.force-failure-workflow == 'true'
      #  run: echo "This workflow failed, but is being forced to run."